# Generated by Django 3.0.3 on 2022-11-13 01:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectionMember',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('election_member_id', models.AutoField(primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('member_type', models.CharField(choices=[('CAN', 'Candidate'), ('VOT', 'Voter'), ('ADM', 'Election Admin')], max_length=3, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CandidateInformation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate_id', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('person_type', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6, null=True)),
                ('full_address', models.CharField(max_length=180, null=True)),
                ('state', models.CharField(choices=[('KS', 'Kansas')], max_length=2, null=True)),
                ('postal_code', models.CharField(max_length=5, null=True)),
                ('ssn', models.CharField(max_length=9, null=True)),
                ('political_party', models.CharField(choices=[('DEM', 'Democratic'), ('REP', 'Republican')], max_length=3, null=True)),
                ('address_proof', models.FileField(null=True, upload_to='candidate_documents/')),
                ('is_candidate_verified', models.BooleanField(default=False)),
                ('is_fault_account', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ElectionInformation',
            fields=[
                ('election_id', models.AutoField(primary_key=True, serialize=False)),
                ('election_name', models.CharField(max_length=200)),
                ('election_date', models.DateField(blank=True, null=True)),
                ('election_result_date', models.DateField(blank=True, null=True)),
                ('election_description', models.CharField(blank=True, max_length=100, null=True)),
                ('is_election_completed', models.BooleanField(default=False)),
                ('winning_candidate_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoterInformation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('voter_id', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('person_type', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6, null=True)),
                ('full_address', models.CharField(max_length=180, null=True)),
                ('state', models.CharField(choices=[('KS', 'Kansas')], max_length=2, null=True)),
                ('postal_code', models.CharField(max_length=5, null=True)),
                ('ssn', models.CharField(max_length=9, null=True)),
                ('address_proof', models.FileField(null=True, upload_to='voter_documents/')),
                ('other_proof', models.FileField(blank=True, null=True, upload_to='voter_documents/')),
                ('is_account_verified', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VotingInformation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.CandidateInformation')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.ElectionInformation')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.VoterInformation')),
            ],
        ),
    ]
